---
name: Dev promotion

env:
  IMAGE_NAME: ceres
  HELM_CHART: ceres

on: 
  pull_request:
    types: [ closed ]
    branches: 
      - master
    paths-ignore:
      - '.github/workflows/**'
      - 'test-script' 

jobs:
  Setup:
    uses: ./.github/workflows/getVersion.yml
    with:
      image: testdevops
    secrets:
      account:  ${{ secrets.GCP_DEV_ACC }}
      GCPCreds: ${{ secrets.GCP_DEV }} 

  Build:
    needs: Setup

    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    ### Seting up runner env ###
      - uses: actions/checkout@v3
          
      - uses: ./.github/actions/GCPSetup
        with:
          GCPCreds: ${{ secrets.GCP_DEV }} 

      - name: 'Maven settings'
        run: 'gsutil cp gs://salus-mavenrepository/m2-settings.xml ./.mvn/settings.xml'

      - name: Docker login
        run: gcloud auth configure-docker gcr.io -q

      - name: .m2 forder [*** fix it please ***]
        run: sed -i 's*/root/.m2/*./.m2/*g' ./.mvn/settings.xml

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '14'
          distribution: 'adopt-hotspot'

      - name: Set artifact name
        shell: bash
        run: |
          echo "ARTIFACT_VERSION=${{ needs.Setup.outputs.new_version }}-SNAPSHOT" >> $GITHUB_ENV 

      ### Maven build
  #    - name: Build with Maven
  #      shell: bash
  #      run: |
  #        mvn build-helper:parse-version versions:set -DnewVersion=${{ env.ARTIFACT_VERSION }} versions:commit
  #        mvn -B deploy -s .mvn/settings.xml

      - name: Build with Maven
        shell: bash
        run: |
          mvn build-helper:parse-version versions:set -DnewVersion=${{ env.ARTIFACT_VERSION }} versions:commit
          mvn -B verify -s .mvn/settings.xml
      
      - run: ls ./target

  #    - name: Image build
  #      run: docker build -t gcr.io/${{ secrets.GCP_DEV_ACC }}/$IMAGE_NAME:latest --build-arg ARTIFACT_VERSION=${{ env.ARTIFACT_VERSION }} .

      ### Image build and push
      - name: Image build
        run: docker build -t gcr.io/${{ secrets.GCP_DEV_ACC }}/testdevops:latest --build-arg ARTIFACT_VERSION=${{ env.ARTIFACT_VERSION }} .

  #    - name: Image push
  #      run: docker push gcr.io/${{ secrets.GCP_DEV_ACC }}/$IMAGE_NAME:latest

      - name: Image push
        run: docker push gcr.io/${{ secrets.GCP_DEV_ACC }}/testdevops:latest

  Deploy:
    runs-on: ubuntu-latest
    needs: [Build]

    steps:
      ### Seting up runner env ###
          
      - uses: ./.github/actions/GCPSetup
        with:
          GCPCreds: ${{ secrets.GCP_DEV }} 
          k8sSetup: "TRUE"
          GCPaccount: ${{ secrets.GCP_STAGE_ACC }}

      - name: Checkout helm-repo
        uses: actions/checkout@v3
        with:
          repository: rax-maas/helm-ceres
          ref: master
          path: helm-ceres
          token: ${{ secrets.GIT_TOKEN }}

      - uses: azure/setup-helm@v3
        with:
          version: 3.9.0
        id: install
      
      ### deploying
      
      - name: Getting latest digest
        shell: bash
        run: | 
          DIGEST=$(gcloud container images list-tags gcr.io/${{ secrets.GCP_DEV_ACC }}/$IMAGE_NAME --filter TAGS=latest --format=json | jq .[0]."digest" | tr -d "\"" | awk -F ":" '{print $2}')
          echo "DIGEST=$(echo $DIGEST)" >> $GITHUB_ENV

      - name: test digest
        run: echo ${{ env.DIGEST }} 
    
#      - name: Helm upgrade
#        run: helm upgrade helm-ceres $HELM_CHART --set image.repository=${IMAGE_NAME}@sha256,image.tag=${{ env.DIGEST }}
