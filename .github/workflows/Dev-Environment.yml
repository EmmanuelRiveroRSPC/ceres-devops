name: Dev-Environment

env:
  IMAGE_NAME: ceres

on: 
  pull_request:
    types: [ closed ]
    branches: 
      - master
    paths-ignore:
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  Build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_DEV }}'
        
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'

    - name: 'Get settings from GS bucket'
      run: 'gsutil cp gs://salus-mavenrepository/m2-settings.xml ./.mvn/settings.xml'

    - name: .m2 forder [*** fix it please ***]
      run: sed -i 's*/root/.m2/*./.m2/*g' ./.mvn/settings.xml

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '14'
        distribution: 'adopt-hotspot'

    - name: Build with Maven
      run: mvn -B verify -s .mvn/settings.xml

    - name: Image build
      run: docker build -t gcr.io/${{ secrets.GCP_DEV_ACC }}/testdevops:latest .

    - name: Docker login
      run: gcloud auth configure-docker gcr.io -q

    - name: Image push
      run: docker push gcr.io/${{ secrets.GCP_DEV_ACC }}/testdevops:latest

  Deploy:
    runs-on: ubuntu-latest
    needs: [Build]

    steps:

    - uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_DEV }}'
        
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'

    - name: K8s login
      run: gcloud container clusters get-credentials primary-cluster --zone us-east1-b --project ${{ secrets.GCP_DEV_ACC }}

    - name: Checkout helm-repo
      uses: actions/checkout@v3
      with:
        repository: rax-maas/helm-ceres
        ref: master
        path: helm-ceres
        token: ${{ secrets.GIT_TOKEN }}

    - uses: azure/setup-helm@v3
      with:
        version: 3.9.0
      id: install

    - name: Getting latest digest
      shell: bash
      run: | 
        DIGEST=$(gcloud container images list-tags gcr.io/${{ secrets.GCP_DEV_ACC }}/ceres --filter TAGS=latest --format=json | jq .[0]."digest" | tr -d "\"" | awk -F ":" '{print $2}')
        echo "DIGEST=$(echo $DIGEST)" >> $GITHUB_ENV

    - name: test digest
      run: echo ${{ env.DIGEST }} 
