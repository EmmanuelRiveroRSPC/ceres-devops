---
name: Get Last version

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      newVersion:
        required: false
        type: boolean
        default: false

    secrets:
      account:
        required: true
      GCPCreds:
        required: true
    outputs:
      version:
        description: "Last image version"
        value: ${{ jobs.version.outputs.version }}

jobs:
  version:
    name: Get version
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.gcloud_version }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

      - uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCPCreds }}'

      - run: |
          POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "POM_VERSION=${POM_VERSION}" >> $GITHUB_ENV

      - uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import xml.etree.ElementTree as ET

            tree = ET.parse('pom.xml')
            root = tree.getroot()

            pomVersion = "${{ env.POM_VERSION }}".split(".")

            major = pomVersion[0]
            minor = pomVersion[1]
            build = pomVersion[2]

            version = major + '.' + minor + '.' + build

            if int(major) == 0:
              print(f"{version}:")
              print('\033[1m' + "Not a release version, canceling promotion")
            #  exit(1)

            BaseVersion = f"{major}.{minor}"

            print ("version detected: {majorVersion}")
            set_env("BASE_VERSION", BaseVersion)           

      - shell: bash
        run: | 
          VERSION=$(gcloud container images list-tags gcr.io/${{ secrets.account }}/${{ inputs.image }} --limit=1 --sort-by=~TIMESTAMP --filter="TAGS~${{ env.BASE_VERSION }}." --format='table[no-heading](tags)')
          #echo "::set-output name=gcloud_version::${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
        
      - uses: jannekem/run-python-script-action@v1
        with:
          script: |
            version = "${{ env.VERSION }}".strip(",latest")

            if len(version.split(",")) > 1:
              print('\033[1m' + "Two tags found using the same image, aborting...")
              exit(1)
            
            print ("version detected: {version}")
            set_env("LAST_VERSION", version)
      - id: version
        shell: bash
        run: | 
          echo "::set-output name=gcloud_version::${{ env.LAST_VERSION }}"


      

